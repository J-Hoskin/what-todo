{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Calcutt\\\\Desktop\\\\React\\\\what-todo\\\\src\\\\containers\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport './App.css';\nimport Footer from '../components/Footer/Footer';\nimport Header from '../components/Header/Header';\nimport Tasks from '../components/Tasks/Tasks';\nimport Lists from '../components/Lists/Lists';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lists: [{\n        listName: \"Get to work\",\n        inprogressTasks: [\"Task 1\", \"Task 2\"],\n        completedTasks: [\"Task 3\", \"Task 4\", \"Task 5\"]\n      }, {\n        listName: \"Gym\",\n        inprogressTasks: [\"Task 1\", \"Task 2\"],\n        completedTasks: [\"Task 3\", \"Task 4\", \"Task 5\"]\n      }],\n      taskInput: \"\"\n    };\n\n    this.onChangeHandler = event => {\n      const updatedTaskInput = event.target.value;\n      this.setState({\n        taskInput: updatedTaskInput\n      });\n    };\n\n    this.completeTask = taskIndex => {\n      const updatedTasks = this.state.tasks;\n      updatedTasks.completed.push(updatedTasks.inprogress[taskIndex]);\n      updatedTasks.inprogress.splice(taskIndex, 1);\n      this.setState({\n        tasks: updatedTasks\n      });\n    };\n\n    this.addTask = () => {\n      if (/\\S/.test(this.state.taskInput)) {\n        const updatedTasks = this.state.tasks;\n        updatedTasks.inprogress.push(this.state.taskInput);\n        this.setState({\n          tasks: updatedTasks\n        });\n        this.setState({\n          taskInput: \"\"\n        });\n      }\n    };\n\n    this.removeTask = taskIndex => {\n      const updatedTasks = this.state.tasks;\n      updatedTasks.inprogress.push(updatedTasks.completed[taskIndex]);\n      updatedTasks.completed.splice(taskIndex, 1);\n      this.setState({\n        tasks: updatedTasks\n      });\n    };\n\n    this.deleteTask = (taskIndex, inprogress) => {\n      const updatedTasks = this.state.tasks;\n\n      if (inprogress) {\n        updatedTasks.inprogress.splice(taskIndex, 1);\n      } else {\n        updatedTasks.completed.splice(taskIndex, 1);\n      }\n\n      this.setState({\n        tasks: updatedTasks\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Header, {\n      page: \"Tasks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/lists/:listName\",\n      render: () => React.createElement(Tasks, Object.assign({}, this.match.params, {\n        tasks: this.state.tasks,\n        completeTask: this.completeTask,\n        addTask: this.addTask,\n        removeTask: this.removeTask,\n        deleteTask: this.deleteTask,\n        onChangeHandler: this.onChangeHandler,\n        taskInput: this.state.taskInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/lists\",\n      exact: true,\n      render: () => React.createElement(Lists, {\n        lists: this.state.lists,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/test\",\n      render: () => React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"It worked\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Route, {\n      render: () => React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"404 Not Found :(\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Calcutt/Desktop/React/what-todo/src/containers/App.js"],"names":["React","Component","Route","Switch","Redirect","Footer","Header","Tasks","Lists","App","state","lists","listName","inprogressTasks","completedTasks","taskInput","onChangeHandler","event","updatedTaskInput","target","value","setState","completeTask","taskIndex","updatedTasks","tasks","completed","push","inprogress","splice","addTask","test","removeTask","deleteTask","render","match","params"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,KAAR,EAAeC,MAAf,EAAuBC,QAAvB,QAAsC,kBAAtC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BS,KAD0B,GAClB;AACNC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,aADZ;AAEEC,QAAAA,eAAe,EAAE,CACf,QADe,EAEf,QAFe,CAFnB;AAMEC,QAAAA,cAAc,EAAE,CACd,QADc,EAEd,QAFc,EAGd,QAHc;AANlB,OADK,EAaL;AACEF,QAAAA,QAAQ,EAAE,KADZ;AAEEC,QAAAA,eAAe,EAAE,CACf,QADe,EAEf,QAFe,CAFnB;AAMEC,QAAAA,cAAc,EAAE,CACd,QADc,EAEd,QAFc,EAGd,QAHc;AANlB,OAbK,CADD;AA2BNC,MAAAA,SAAS,EAAE;AA3BL,KADkB;;AAAA,SA+B1BC,eA/B0B,GA+BPC,KAAD,IAAW;AAC3B,YAAMC,gBAAgB,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAtC;AACA,WAAKC,QAAL,CAAc;AAACN,QAAAA,SAAS,EAAEG;AAAZ,OAAd;AACD,KAlCyB;;AAAA,SAoC1BI,YApC0B,GAoCVC,SAAD,IAAe;AAC5B,YAAMC,YAAY,GAAG,KAAKd,KAAL,CAAWe,KAAhC;AACAD,MAAAA,YAAY,CAACE,SAAb,CAAuBC,IAAvB,CAA4BH,YAAY,CAACI,UAAb,CAAwBL,SAAxB,CAA5B;AACAC,MAAAA,YAAY,CAACI,UAAb,CAAwBC,MAAxB,CAA+BN,SAA/B,EAA0C,CAA1C;AACA,WAAKF,QAAL,CAAc;AAACI,QAAAA,KAAK,EAAED;AAAR,OAAd;AACD,KAzCyB;;AAAA,SA2C1BM,OA3C0B,GA2ChB,MAAM;AACd,UAAG,KAAKC,IAAL,CAAU,KAAKrB,KAAL,CAAWK,SAArB,CAAH,EAAmC;AACjC,cAAMS,YAAY,GAAG,KAAKd,KAAL,CAAWe,KAAhC;AACAD,QAAAA,YAAY,CAACI,UAAb,CAAwBD,IAAxB,CAA6B,KAAKjB,KAAL,CAAWK,SAAxC;AACA,aAAKM,QAAL,CAAc;AAACI,UAAAA,KAAK,EAAED;AAAR,SAAd;AACA,aAAKH,QAAL,CAAc;AAACN,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACD;AACF,KAlDyB;;AAAA,SAoD1BiB,UApD0B,GAoDZT,SAAD,IAAe;AAC1B,YAAMC,YAAY,GAAG,KAAKd,KAAL,CAAWe,KAAhC;AACAD,MAAAA,YAAY,CAACI,UAAb,CAAwBD,IAAxB,CAA6BH,YAAY,CAACE,SAAb,CAAuBH,SAAvB,CAA7B;AACAC,MAAAA,YAAY,CAACE,SAAb,CAAuBG,MAAvB,CAA8BN,SAA9B,EAAyC,CAAzC;AACA,WAAKF,QAAL,CAAc;AAACI,QAAAA,KAAK,EAAED;AAAR,OAAd;AACD,KAzDyB;;AAAA,SA2D1BS,UA3D0B,GA2Db,CAACV,SAAD,EAAYK,UAAZ,KAA2B;AACtC,YAAMJ,YAAY,GAAG,KAAKd,KAAL,CAAWe,KAAhC;;AACA,UAAGG,UAAH,EAAc;AACZJ,QAAAA,YAAY,CAACI,UAAb,CAAwBC,MAAxB,CAA+BN,SAA/B,EAA0C,CAA1C;AACD,OAFD,MAGK;AACHC,QAAAA,YAAY,CAACE,SAAb,CAAuBG,MAAvB,CAA8BN,SAA9B,EAAyC,CAAzC;AACD;;AAED,WAAKF,QAAL,CAAc;AAACI,QAAAA,KAAK,EAAED;AAAR,OAAd;AACD,KArEyB;AAAA;;AAuE1BU,EAAAA,MAAM,GAAE;AACN,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,kBAAZ;AAA+B,MAAA,MAAM,EAAE,MAAM,oBAAC,KAAD,oBACrC,KAAKC,KAAL,CAAWC,MAD0B;AAEzC,QAAA,KAAK,EAAE,KAAK1B,KAAL,CAAWe,KAFuB;AAGzC,QAAA,YAAY,EAAE,KAAKH,YAHsB;AAIzC,QAAA,OAAO,EAAE,KAAKQ,OAJ2B;AAKzC,QAAA,UAAU,EAAE,KAAKE,UALwB;AAMzC,QAAA,UAAU,EAAE,KAAKC,UANwB;AAOzC,QAAA,eAAe,EAAE,KAAKjB,eAPmB;AAQzC,QAAA,SAAS,EAAE,KAAKN,KAAL,CAAWK,SARmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAWE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,MAA1B;AAA2B,MAAA,MAAM,EAAE,MAAK,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAYE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,MAAM,EAAE,MAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,EAaE,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,MAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CAFJ,EAiBI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBJ,CADJ;AAqBD;;AA7FyB;;AAgG5B,eAAeF,GAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {Route, Switch, Redirect} from 'react-router-dom';\r\nimport './App.css';\r\nimport Footer from '../components/Footer/Footer';\r\nimport Header from '../components/Header/Header';\r\nimport Tasks from '../components/Tasks/Tasks';\r\nimport Lists from '../components/Lists/Lists';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    lists: [\r\n      {\r\n        listName: \"Get to work\",\r\n        inprogressTasks: [\r\n          \"Task 1\",\r\n          \"Task 2\"\r\n        ],\r\n        completedTasks: [\r\n          \"Task 3\",\r\n          \"Task 4\",\r\n          \"Task 5\"\r\n        ]\r\n      },\r\n      {\r\n        listName: \"Gym\",\r\n        inprogressTasks: [\r\n          \"Task 1\",\r\n          \"Task 2\"\r\n        ],\r\n        completedTasks: [\r\n          \"Task 3\",\r\n          \"Task 4\",\r\n          \"Task 5\"\r\n        ]\r\n      }\r\n    ],\r\n    taskInput: \"\"\r\n  }\r\n\r\n  onChangeHandler = (event) => {\r\n    const updatedTaskInput = event.target.value;\r\n    this.setState({taskInput: updatedTaskInput})\r\n  }\r\n\r\n  completeTask = (taskIndex) => {\r\n    const updatedTasks = this.state.tasks;\r\n    updatedTasks.completed.push(updatedTasks.inprogress[taskIndex])\r\n    updatedTasks.inprogress.splice(taskIndex, 1);\r\n    this.setState({tasks: updatedTasks})\r\n  }\r\n\r\n  addTask = () => {\r\n    if(/\\S/.test(this.state.taskInput)){\r\n      const updatedTasks = this.state.tasks;\r\n      updatedTasks.inprogress.push(this.state.taskInput);\r\n      this.setState({tasks: updatedTasks});\r\n      this.setState({taskInput: \"\"});\r\n    }\r\n  }\r\n\r\n  removeTask = (taskIndex) => {\r\n    const updatedTasks = this.state.tasks;\r\n    updatedTasks.inprogress.push(updatedTasks.completed[taskIndex])\r\n    updatedTasks.completed.splice(taskIndex, 1);\r\n    this.setState({tasks: updatedTasks})\r\n  }\r\n\r\n  deleteTask = (taskIndex, inprogress) => {\r\n    const updatedTasks = this.state.tasks;\r\n    if(inprogress){\r\n      updatedTasks.inprogress.splice(taskIndex, 1);\r\n    }\r\n    else {\r\n      updatedTasks.completed.splice(taskIndex, 1);\r\n    }\r\n    \r\n    this.setState({tasks: updatedTasks})\r\n  }\r\n\r\n  render(){\r\n    return (\r\n        <div className=\"App\">\r\n            <Header page=\"Tasks\"/>\r\n            <Switch>\r\n            <Route path=\"/lists/:listName\" render={() => <Tasks\r\n                {...this.match.params}\r\n                tasks={this.state.tasks}\r\n                completeTask={this.completeTask}\r\n                addTask={this.addTask}\r\n                removeTask={this.removeTask}\r\n                deleteTask={this.deleteTask}\r\n                onChangeHandler={this.onChangeHandler}\r\n                taskInput={this.state.taskInput}\r\n              />} />\r\n              <Route path=\"/lists\" exact render={()=> <Lists lists={this.state.lists} />} />\r\n              <Route path=\"/test\" render={()=> <p>It worked</p>} />\r\n              <Route render={()=> <p>404 Not Found :(</p>} />\r\n            </Switch>\r\n            <Footer />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}