{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Calcutt\\\\Desktop\\\\React\\\\what-todo\\\\src\\\\containers\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport './App.css';\nimport Footer from '../components/Footer/Footer';\nimport Header from '../components/Header/Header';\nimport Tasks from '../components/Tasks/Tasks';\nimport Lists from '../components/Lists/Lists';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: {\n        inprogress: [\"Task 1\", \"Task 2\"],\n        completed: [\"Task 3\", \"Task 4\", \"Task 5\"]\n      },\n      taskInput: \"\"\n    };\n\n    this.onChangeHandler = event => {\n      const updatedTaskInput = event.target.value;\n      this.setState({\n        taskInput: updatedTaskInput\n      });\n    };\n\n    this.completeTask = taskIndex => {\n      const updatedTasks = this.state.tasks;\n      updatedTasks.completed.push(updatedTasks.inprogress[taskIndex]);\n      updatedTasks.inprogress.splice(taskIndex, 1);\n      this.setState({\n        tasks: updatedTasks\n      });\n    };\n\n    this.addTask = () => {\n      if (/\\S/.test(this.state.taskInput)) {\n        const updatedTasks = this.state.tasks;\n        updatedTasks.inprogress.push(this.state.taskInput);\n        this.setState({\n          tasks: updatedTasks\n        });\n        this.setState({\n          taskInput: \"\"\n        });\n      }\n    };\n\n    this.removeTask = taskIndex => {\n      const updatedTasks = this.state.tasks;\n      updatedTasks.inprogress.push(updatedTasks.completed[taskIndex]);\n      updatedTasks.completed.splice(taskIndex, 1);\n      this.setState({\n        tasks: updatedTasks\n      });\n    };\n\n    this.deleteTask = (taskIndex, inprogress) => {\n      const updatedTasks = this.state.tasks;\n\n      if (inprogress) {\n        updatedTasks.inprogress.splice(taskIndex, 1);\n      } else {\n        updatedTasks.completed.splice(taskIndex, 1);\n      }\n\n      this.setState({\n        tasks: updatedTasks\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Header, {\n      page: \"Tasks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Tasks, {\n      tasks: this.state.tasks,\n      completeTask: this.completeTask,\n      addTask: this.addTask,\n      removeTask: this.removeTask,\n      deleteTask: this.deleteTask,\n      onChangeHandler: this.onChangeHandler,\n      taskInput: this.state.taskInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Calcutt/Desktop/React/what-todo/src/containers/App.js"],"names":["React","Component","Route","Switch","Redirect","Footer","Header","Tasks","Lists","App","state","tasks","inprogress","completed","taskInput","onChangeHandler","event","updatedTaskInput","target","value","setState","completeTask","taskIndex","updatedTasks","push","splice","addTask","test","removeTask","deleteTask","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,KAAR,EAAeC,MAAf,EAAuBC,QAAvB,QAAsC,kBAAtC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BS,KAD0B,GAClB;AACJC,MAAAA,KAAK,EAAE;AACLC,QAAAA,UAAU,EAAE,CACV,QADU,EAEV,QAFU,CADP;AAKLC,QAAAA,SAAS,EAAE,CACT,QADS,EAET,QAFS,EAGT,QAHS;AALN,OADH;AAYJC,MAAAA,SAAS,EAAE;AAZP,KADkB;;AAAA,SAgB1BC,eAhB0B,GAgBPC,KAAD,IAAW;AAC3B,YAAMC,gBAAgB,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAtC;AACA,WAAKC,QAAL,CAAc;AAACN,QAAAA,SAAS,EAAEG;AAAZ,OAAd;AACD,KAnByB;;AAAA,SAqB1BI,YArB0B,GAqBVC,SAAD,IAAe;AAC5B,YAAMC,YAAY,GAAG,KAAKb,KAAL,CAAWC,KAAhC;AACAY,MAAAA,YAAY,CAACV,SAAb,CAAuBW,IAAvB,CAA4BD,YAAY,CAACX,UAAb,CAAwBU,SAAxB,CAA5B;AACAC,MAAAA,YAAY,CAACX,UAAb,CAAwBa,MAAxB,CAA+BH,SAA/B,EAA0C,CAA1C;AACA,WAAKF,QAAL,CAAc;AAACT,QAAAA,KAAK,EAAEY;AAAR,OAAd;AACD,KA1ByB;;AAAA,SA4B1BG,OA5B0B,GA4BhB,MAAM;AACd,UAAG,KAAKC,IAAL,CAAU,KAAKjB,KAAL,CAAWI,SAArB,CAAH,EAAmC;AACjC,cAAMS,YAAY,GAAG,KAAKb,KAAL,CAAWC,KAAhC;AACAY,QAAAA,YAAY,CAACX,UAAb,CAAwBY,IAAxB,CAA6B,KAAKd,KAAL,CAAWI,SAAxC;AACA,aAAKM,QAAL,CAAc;AAACT,UAAAA,KAAK,EAAEY;AAAR,SAAd;AACA,aAAKH,QAAL,CAAc;AAACN,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACD;AACF,KAnCyB;;AAAA,SAqC1Bc,UArC0B,GAqCZN,SAAD,IAAe;AAC1B,YAAMC,YAAY,GAAG,KAAKb,KAAL,CAAWC,KAAhC;AACAY,MAAAA,YAAY,CAACX,UAAb,CAAwBY,IAAxB,CAA6BD,YAAY,CAACV,SAAb,CAAuBS,SAAvB,CAA7B;AACAC,MAAAA,YAAY,CAACV,SAAb,CAAuBY,MAAvB,CAA8BH,SAA9B,EAAyC,CAAzC;AACA,WAAKF,QAAL,CAAc;AAACT,QAAAA,KAAK,EAAEY;AAAR,OAAd;AACD,KA1CyB;;AAAA,SA4C1BM,UA5C0B,GA4Cb,CAACP,SAAD,EAAYV,UAAZ,KAA2B;AACtC,YAAMW,YAAY,GAAG,KAAKb,KAAL,CAAWC,KAAhC;;AACA,UAAGC,UAAH,EAAc;AACZW,QAAAA,YAAY,CAACX,UAAb,CAAwBa,MAAxB,CAA+BH,SAA/B,EAA0C,CAA1C;AACD,OAFD,MAGK;AACHC,QAAAA,YAAY,CAACV,SAAb,CAAuBY,MAAvB,CAA8BH,SAA9B,EAAyC,CAAzC;AACD;;AAED,WAAKF,QAAL,CAAc;AAACT,QAAAA,KAAK,EAAEY;AAAR,OAAd;AACD,KAtDyB;AAAA;;AAwD1BO,EAAAA,MAAM,GAAE;AACN,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEM,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWC,KADpB;AAEE,MAAA,YAAY,EAAE,KAAKU,YAFrB;AAGE,MAAA,OAAO,EAAE,KAAKK,OAHhB;AAIE,MAAA,UAAU,EAAE,KAAKE,UAJnB;AAKE,MAAA,UAAU,EAAE,KAAKC,UALnB;AAME,MAAA,eAAe,EAAE,KAAKd,eANxB;AAOE,MAAA,SAAS,EAAE,KAAKL,KAAL,CAAWI,SAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFN,EAWI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,CADJ;AAeD;;AAxEyB;;AA2E5B,eAAeL,GAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {Route, Switch, Redirect} from 'react-router-dom';\r\nimport './App.css';\r\nimport Footer from '../components/Footer/Footer';\r\nimport Header from '../components/Header/Header';\r\nimport Tasks from '../components/Tasks/Tasks';\r\nimport Lists from '../components/Lists/Lists';\r\n\r\nclass App extends Component {\r\n  state = {\r\n      tasks: {\r\n        inprogress: [\r\n          \"Task 1\",\r\n          \"Task 2\"\r\n        ],\r\n        completed: [\r\n          \"Task 3\",\r\n          \"Task 4\",\r\n          \"Task 5\"\r\n        ]\r\n      },\r\n      taskInput: \"\"\r\n  }\r\n\r\n  onChangeHandler = (event) => {\r\n    const updatedTaskInput = event.target.value;\r\n    this.setState({taskInput: updatedTaskInput})\r\n  }\r\n\r\n  completeTask = (taskIndex) => {\r\n    const updatedTasks = this.state.tasks;\r\n    updatedTasks.completed.push(updatedTasks.inprogress[taskIndex])\r\n    updatedTasks.inprogress.splice(taskIndex, 1);\r\n    this.setState({tasks: updatedTasks})\r\n  }\r\n\r\n  addTask = () => {\r\n    if(/\\S/.test(this.state.taskInput)){\r\n      const updatedTasks = this.state.tasks;\r\n      updatedTasks.inprogress.push(this.state.taskInput);\r\n      this.setState({tasks: updatedTasks});\r\n      this.setState({taskInput: \"\"});\r\n    }\r\n  }\r\n\r\n  removeTask = (taskIndex) => {\r\n    const updatedTasks = this.state.tasks;\r\n    updatedTasks.inprogress.push(updatedTasks.completed[taskIndex])\r\n    updatedTasks.completed.splice(taskIndex, 1);\r\n    this.setState({tasks: updatedTasks})\r\n  }\r\n\r\n  deleteTask = (taskIndex, inprogress) => {\r\n    const updatedTasks = this.state.tasks;\r\n    if(inprogress){\r\n      updatedTasks.inprogress.splice(taskIndex, 1);\r\n    }\r\n    else {\r\n      updatedTasks.completed.splice(taskIndex, 1);\r\n    }\r\n    \r\n    this.setState({tasks: updatedTasks})\r\n  }\r\n\r\n  render(){\r\n    return (\r\n        <div className=\"App\">\r\n            <Header page=\"Tasks\"/>\r\n              <Tasks\r\n                tasks={this.state.tasks}\r\n                completeTask={this.completeTask}\r\n                addTask={this.addTask}\r\n                removeTask={this.removeTask}\r\n                deleteTask={this.deleteTask}\r\n                onChangeHandler={this.onChangeHandler}\r\n                taskInput={this.state.taskInput}\r\n              />\r\n            <Footer />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}