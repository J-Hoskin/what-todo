{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Calcutt\\\\Desktop\\\\React\\\\what-todo\\\\src\\\\containers\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport './App.css';\nimport Footer from '../components/Footer/Footer';\nimport Header from '../components/Header/Header';\nimport Tasks from '../components/Tasks/Tasks';\nimport Lists from '../components/Lists/Lists';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lists: [{\n        listName: \"Get to work\",\n        inprogressTasks: [\"Do Math questions\", \"Leet code problem\"],\n        completedTasks: [\"Add lists to React project\"]\n      }, {\n        listName: \"Gym\",\n        inprogressTasks: [\"Eat hype pre meal\", \"Go to Gym\"],\n        completedTasks: [\"Task 3\"]\n      }],\n      taskInput: \"\"\n    };\n\n    this.onChangeHandler = event => {\n      const updatedTaskInput = event.target.value;\n      this.setState({\n        taskInput: updatedTaskInput\n      });\n    };\n\n    this.completeTask = (taskIndex, listIndex) => {\n      const updatedTasks = this.state.tasks;\n      updatedTasks.lists[listIndex].completed.push(updatedTasks.lists[listIndex].inprogress[taskIndex]);\n      updatedTasks.lists[listIndex].inprogress.splice(taskIndex, 1);\n      this.setState({\n        tasks: updatedTasks\n      });\n    };\n\n    this.addTask = () => {\n      if (/\\S/.test(this.state.taskInput)) {\n        const updatedTasks = this.state.tasks;\n        updatedTasks.inprogress.push(this.state.taskInput);\n        this.setState({\n          tasks: updatedTasks\n        });\n        this.setState({\n          taskInput: \"\"\n        });\n      }\n    };\n\n    this.removeTask = taskIndex => {\n      const updatedTasks = this.state.tasks;\n      updatedTasks.inprogress.push(updatedTasks.completed[taskIndex]);\n      updatedTasks.completed.splice(taskIndex, 1);\n      this.setState({\n        tasks: updatedTasks\n      });\n    };\n\n    this.deleteTask = (taskIndex, inprogress) => {\n      const updatedTasks = this.state.tasks;\n\n      if (inprogress) {\n        updatedTasks.inprogress.splice(taskIndex, 1);\n      } else {\n        updatedTasks.completed.splice(taskIndex, 1);\n      }\n\n      this.setState({\n        tasks: updatedTasks\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, console.log(\"rerendered\"), React.createElement(Header, {\n      page: \"Tasks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/lists/:listName\",\n      render: props => React.createElement(Tasks, Object.assign({}, props, {\n        list: this.state.lists[props.match.params.listName],\n        completeTask: this.completeTask,\n        addTask: this.addTask,\n        removeTask: this.removeTask,\n        deleteTask: this.deleteTask,\n        onChangeHandler: this.onChangeHandler,\n        taskInput: this.state.taskInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/lists\",\n      exact: true,\n      render: () => React.createElement(Lists, {\n        lists: this.state.lists,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/test\",\n      render: () => React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"It worked\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Route, {\n      render: () => React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"404 Not Found :(\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Calcutt/Desktop/React/what-todo/src/containers/App.js"],"names":["React","Component","Route","Switch","Redirect","Footer","Header","Tasks","Lists","App","state","lists","listName","inprogressTasks","completedTasks","taskInput","onChangeHandler","event","updatedTaskInput","target","value","setState","completeTask","taskIndex","listIndex","updatedTasks","tasks","completed","push","inprogress","splice","addTask","test","removeTask","deleteTask","render","console","log","props","match","params"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Route, Switch, Redirect} from 'react-router-dom';\r\nimport './App.css';\r\nimport Footer from '../components/Footer/Footer';\r\nimport Header from '../components/Header/Header';\r\nimport Tasks from '../components/Tasks/Tasks';\r\nimport Lists from '../components/Lists/Lists';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    lists: [\r\n      {\r\n        listName: \"Get to work\",\r\n        inprogressTasks: [\r\n          \"Do Math questions\",\r\n          \"Leet code problem\"\r\n        ],\r\n        completedTasks: [\r\n          \"Add lists to React project\"\r\n        ]\r\n      },\r\n      {\r\n        listName: \"Gym\",\r\n        inprogressTasks: [\r\n          \"Eat hype pre meal\",\r\n          \"Go to Gym\"\r\n        ],\r\n        completedTasks: [\r\n          \"Task 3\"\r\n        ]\r\n      }\r\n    ],\r\n    taskInput: \"\"\r\n  }\r\n\r\n  onChangeHandler = (event) => {\r\n    const updatedTaskInput = event.target.value;\r\n    this.setState({taskInput: updatedTaskInput})\r\n  }\r\n\r\n  completeTask = (taskIndex, listIndex) => {\r\n    const updatedTasks = this.state.tasks;\r\n    updatedTasks.lists[listIndex].completed.push(updatedTasks.lists[listIndex].inprogress[taskIndex])\r\n    updatedTasks.lists[listIndex].inprogress.splice(taskIndex, 1);\r\n    this.setState({tasks: updatedTasks})\r\n  }\r\n\r\n  addTask = () => {\r\n    if(/\\S/.test(this.state.taskInput)){\r\n      const updatedTasks = this.state.tasks;\r\n      updatedTasks.inprogress.push(this.state.taskInput);\r\n      this.setState({tasks: updatedTasks});\r\n      this.setState({taskInput: \"\"});\r\n    }\r\n  }\r\n\r\n  removeTask = (taskIndex) => {\r\n    const updatedTasks = this.state.tasks;\r\n    updatedTasks.inprogress.push(updatedTasks.completed[taskIndex])\r\n    updatedTasks.completed.splice(taskIndex, 1);\r\n    this.setState({tasks: updatedTasks})\r\n  }\r\n\r\n  deleteTask = (taskIndex, inprogress) => {\r\n    const updatedTasks = this.state.tasks;\r\n    if(inprogress){\r\n      updatedTasks.inprogress.splice(taskIndex, 1);\r\n    }\r\n    else {\r\n      updatedTasks.completed.splice(taskIndex, 1);\r\n    }\r\n    \r\n    this.setState({tasks: updatedTasks})\r\n  }\r\n\r\n  render(){\r\n    return (\r\n        <div className=\"App\">\r\n            {console.log(\"rerendered\")}\r\n            <Header page=\"Tasks\"/>\r\n            <Switch>\r\n            <Route path=\"/lists/:listName\" render={(props) => <Tasks\r\n                {...props}\r\n                list={this.state.lists[props.match.params.listName]} \r\n                completeTask={this.completeTask}\r\n                addTask={this.addTask}\r\n                removeTask={this.removeTask}\r\n                deleteTask={this.deleteTask}\r\n                onChangeHandler={this.onChangeHandler}\r\n                taskInput={this.state.taskInput}\r\n              />} />\r\n              <Route path=\"/lists\" exact render={()=> <Lists lists={this.state.lists} />} />\r\n              <Route path=\"/test\" render={()=> <p>It worked</p>} />\r\n              <Route render={()=> <p>404 Not Found :(</p>} />\r\n            </Switch>\r\n            <Footer />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}