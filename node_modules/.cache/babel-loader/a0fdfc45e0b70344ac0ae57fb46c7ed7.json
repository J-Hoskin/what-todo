{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Calcutt\\\\Desktop\\\\React\\\\what-todo\\\\src\\\\components\\\\Tasks\\\\Tasks.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Task from './Task/Task';\nimport './Tasks.css';\nimport Input from '../Input/Input';\n\nclass Tasks extends Component {\n  componentDidMount() {\n    this.props.updatePageTitle(\"title\");\n  }\n\n  render() {\n    const completedTask = {\n      opacity: '0.5'\n    };\n    const listIndex = this.props.match.params.listName;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"TasksContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Todo (\", this.props.list.inprogressTasks.length, \")\"), this.props.list.inprogressTasks.map((item, key) => {\n      return React.createElement(Task, {\n        style: {\n          opacity: '1'\n        },\n        key: key,\n        name: item,\n        clicked: () => this.props.completeTask(key, listIndex),\n        deleteTask: () => this.props.deleteTask(key, true, listIndex),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Completed (\", this.props.list.completedTasks.length, \")\"), this.props.list.completedTasks.map((item, key) => {\n      return React.createElement(Task, {\n        style: completedTask,\n        key: key,\n        name: item,\n        clicked: () => this.props.incompleteTask(key, listIndex),\n        deleteTask: () => this.props.deleteTask(key, false, listIndex),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      });\n    }), React.createElement(Input, {\n      addItem: () => this.props.addTask(listIndex),\n      onChangeHandler: this.props.onChangeHandler,\n      textInput: this.props.textInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(Tasks);","map":{"version":3,"sources":["C:/Users/Calcutt/Desktop/React/what-todo/src/components/Tasks/Tasks.js"],"names":["React","Component","withRouter","Task","Input","Tasks","componentDidMount","props","updatePageTitle","render","completedTask","opacity","listIndex","match","params","listName","list","inprogressTasks","length","map","item","key","completeTask","deleteTask","completedTasks","incompleteTask","addTask","onChangeHandler","textInput"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAC1BK,EAAAA,iBAAiB,GAAI;AACjB,SAAKC,KAAL,CAAWC,eAAX,CAA2B,OAA3B;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,UAAMC,aAAa,GAAG;AAClBC,MAAAA,OAAO,EAAE;AADS,KAAtB;AAGA,UAAMC,SAAS,GAAG,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,CAAwBC,QAA1C;AAEA,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAW,KAAKR,KAAL,CAAWS,IAAX,CAAgBC,eAAhB,CAAgCC,MAA3C,MADJ,EAEK,KAAKX,KAAL,CAAWS,IAAX,CAAgBC,eAAhB,CAAgCE,GAAhC,CAAoC,CAACC,IAAD,EAAOC,GAAP,KAAe;AAChD,aAAO,oBAAC,IAAD;AACH,QAAA,KAAK,EAAE;AAACV,UAAAA,OAAO,EAAE;AAAV,SADJ;AAEH,QAAA,GAAG,EAAEU,GAFF;AAGH,QAAA,IAAI,EAAED,IAHH;AAIH,QAAA,OAAO,EAAE,MAAM,KAAKb,KAAL,CAAWe,YAAX,CAAwBD,GAAxB,EAA6BT,SAA7B,CAJZ;AAKH,QAAA,UAAU,EAAE,MAAM,KAAKL,KAAL,CAAWgB,UAAX,CAAsBF,GAAtB,EAA2B,IAA3B,EAAiCT,SAAjC,CALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAOH,KARA,CAFL,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgB,KAAKL,KAAL,CAAWS,IAAX,CAAgBQ,cAAhB,CAA+BN,MAA/C,MAfJ,EAgBK,KAAKX,KAAL,CAAWS,IAAX,CAAgBQ,cAAhB,CAA+BL,GAA/B,CAAmC,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC/C,aAAO,oBAAC,IAAD;AACH,QAAA,KAAK,EAAEX,aADJ;AAEH,QAAA,GAAG,EAAEW,GAFF;AAGH,QAAA,IAAI,EAAED,IAHH;AAIH,QAAA,OAAO,EAAE,MAAM,KAAKb,KAAL,CAAWkB,cAAX,CAA0BJ,GAA1B,EAA+BT,SAA/B,CAJZ;AAKH,QAAA,UAAU,EAAE,MAAM,KAAKL,KAAL,CAAWgB,UAAX,CAAsBF,GAAtB,EAA2B,KAA3B,EAAkCT,SAAlC,CALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAOH,KARA,CAhBL,EAyBI,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE,MAAI,KAAKL,KAAL,CAAWmB,OAAX,CAAmBd,SAAnB,CAApB;AAAmD,MAAA,eAAe,EAAE,KAAKL,KAAL,CAAWoB,eAA/E;AAAgG,MAAA,SAAS,EAAE,KAAKpB,KAAL,CAAWqB,SAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBJ,CADJ,CADJ;AA+BH;;AA1CyB;;AA6C9B,eAAe1B,UAAU,CAACG,KAAD,CAAzB","sourcesContent":["import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Task from './Task/Task';\r\nimport './Tasks.css';\r\nimport Input from '../Input/Input';\r\n\r\nclass Tasks extends Component {\r\n    componentDidMount () {\r\n        this.props.updatePageTitle(\"title\");\r\n    }\r\n\r\n    render(){\r\n        const completedTask = {\r\n            opacity: '0.5'\r\n        }\r\n        const listIndex = this.props.match.params.listName;\r\n        \r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"TasksContent\">\r\n                    <h4>Todo ({this.props.list.inprogressTasks.length})</h4>\r\n                    {this.props.list.inprogressTasks.map((item, key) => {\r\n                        return(<Task\r\n                            style={{opacity: '1'}}\r\n                            key={key}\r\n                            name={item}\r\n                            clicked={() => this.props.completeTask(key, listIndex)}\r\n                            deleteTask={() => this.props.deleteTask(key, true, listIndex)}\r\n                        />);\r\n                    })}\r\n\r\n                    <br />\r\n                    <br />\r\n\r\n                    <h4>Completed ({this.props.list.completedTasks.length})</h4>\r\n                    {this.props.list.completedTasks.map((item, key) => {\r\n                        return(<Task\r\n                            style={completedTask}\r\n                            key={key} \r\n                            name={item} \r\n                            clicked={() => this.props.incompleteTask(key, listIndex)}\r\n                            deleteTask={() => this.props.deleteTask(key, false, listIndex)}\r\n                        />);\r\n                    })}\r\n                    <Input addItem={()=>this.props.addTask(listIndex)} onChangeHandler={this.props.onChangeHandler} textInput={this.props.textInput} />\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Tasks);"]},"metadata":{},"sourceType":"module"}